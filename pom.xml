<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.hwz</groupId>
	
	<artifactId>hwz-server</artifactId>
	
	<version>0.0.1-SNAPSHOT</version>
	
	<packaging>pom</packaging>
	
	<name>hwz-server ${project.version}</name>
	
	<modules>
		<module>hwz-common</module>
		<module>hwz-platform</module>
		<module>hwz-web</module>
		<module>hwz-web-deploy</module>
	</modules>	
	
	<properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	<maven.test.skip>true</maven.test.skip>
    	<downloadSources>true</downloadSources>
        <java_source_version>1.7</java_source_version>
        <java_target_version>1.7</java_target_version>
        <file_encoding>UTF-8</file_encoding>
        <spring.version>3.1.2.RELEASE</spring.version>
    </properties>
    
    <!-- maven plug manager -->
    <!-- <build>
    	<pluginManagement>
    		<plugins>
    			<plugin>
    				...... 给中插件
    			</plugin>
    		</plugins>
    	</pluginManagement>
    </build> -->
    
    <!-- maven jar包管理标签  供其它子节点使用-->
    <dependencyManagement>
    	<dependencies>
    		<dependency>
				<groupId>com.hwz</groupId>
				<artifactId>hwz-platform</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency> 
			
			<dependency>
				<groupId>com.hwz</groupId>
				<artifactId>hwz-common</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
			
			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>
			
			<dependency>  
			    <groupId>org.springframework</groupId>  
			    <artifactId>spring-context</artifactId>  
			    <version>${spring.version}</version>  
			</dependency>  
			  
			<dependency>  
			    <groupId>org.springframework</groupId>  
			    <artifactId>spring-aop</artifactId>  
			    <version>${spring.version}</version>  
			</dependency>  
			  
			<dependency>  
			    <groupId>org.springframework</groupId>  
			    <artifactId>spring-core</artifactId>  
			    <version>${spring.version}</version>  
			</dependency>
			<!-- spring 测试 -->
			<dependency>  
			    <groupId>org.springframework</groupId>  
			    <artifactId>spring-test</artifactId>  
			    <version>${spring.version}</version>  
			</dependency>  
			
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-redis</artifactId>
				<version>1.4.0.RELEASE</version>
			</dependency>
	
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-commons</artifactId>
				<version>1.5.0.RELEASE</version>
			</dependency>
			
			<!-- redis -->
			<dependency>
				<groupId>redis.clients</groupId>
				<artifactId>jedis</artifactId>
				<version>2.5.1</version>
			</dependency>
			
			<!-- mybatis -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>1.2.0</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.2.1</version>
			</dependency>
			
			<!-- mysql -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>5.1.30</version>
			</dependency>
			
			<!-- commons -->
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>1.8.3</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<!--database -->
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>3.1</version>
			</dependency>
						<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.1</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.9</version>
			</dependency>
			
			
			<!-- ............ -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>1.9.13</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.6.3</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>2.6.0</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.6.3</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-base</artifactId>
				<version>2.6.3</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.jaxrs</groupId>
				<artifactId>jackson-jaxrs-json-provider</artifactId>
				<version>2.6.3</version>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.0.1</version>
			</dependency>
	
			<!-- es -->
			<dependency>
				<groupId>io.searchbox</groupId>
				<artifactId>jest</artifactId>
				<version>2.0.0</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
	
			<!-- zk -->
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>3.1.0</version>
			</dependency>
			
	    	<dependency>
				<groupId>dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>1.6.1</version>
			</dependency>
	
			<!-- servlet -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
	
			<!--quartz -->
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>2.1.7</version>
			</dependency>
	
			<!--cglib -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>2.2.2</version>
			</dependency>
	
			<!-- log4j -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>
			<!--  slf4j-api-->
			<dependency>
	  			<groupId>org.slf4j</groupId>
	  			<artifactId>slf4j-api</artifactId>
	  			<version>1.7.1</version>
			</dependency>
			<!-- slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.6.1</version>
			</dependency>
			<!-- jdbc log4j -->
			<dependency>
				<groupId>org.lazyluke</groupId>
				<artifactId>log4jdbc-remix</artifactId>
				<version>0.2.7</version>
			</dependency>
			
			<!-- javamelody -->
			<dependency>
				<groupId>net.bull.javamelody</groupId>
				<artifactId>javamelody-core</artifactId>
				<version>1.44.0</version>
			</dependency>
			<!-- freemarker -->
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>2.3.19</version>
			</dependency>
			<!-- mongodb -->
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>3.5.0</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-mongodb</artifactId>
				<version>1.10.9.RELEASE</version>
			</dependency>
    	</dependencies>
    </dependencyManagement>
    
    

    <build>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <!-- 主资源目录  	作用：里面用到的变量在打包时就会根据filter中的变量配置替换成固定值--> 
		<resources>
			<!-- maven default生命周期，process-resources阶段
				执行maven-resources-plugin插件的resources目标处理主资源目下的资源文件-->
			<resource>
				<!-- 指定处理主资源目录  -->
				<directory>src/main/java</directory>
				<!-- 剔除下如下配置中包含的资源类型-->
				<!-- **/*  保证各级子目录下的资源文件被打包 -->
				<includes>
                    <include>**/*.xml</include>
                </includes>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/*.scala</exclude>
					<exclude>**/.svn/</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>

            <resource>
                <directory>src/main/resources</directory>
                
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                    <include>**/*.sql</include>
                    <include>**/*.ftl</include>
                </includes>
                <excludes>
                    <exclude>**/.svn/</exclude>
                </excludes>
                <!--是否对主资源目录开启资源过滤-->
                <filtering>true</filtering>
            </resource>
            
            <!-- web资源文件是需要通过 maven-war-plugin来处理  通过resource不行-->
            <!-- <resource>
				<directory>src/main/webapp</directory>
				<excludes>
                    <exclude>**/.svn/</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>  -->
		</resources>

		<plugins>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <!-- 配置执行任务 -->
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <!-- <phase> 标签  可以绑定插件目标，在那个生命周期中执行-->
                        
                        <!-- 指定插件目标  即某插件中的一种功能-->
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
            	<!-- 用来编译Java代码 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <!-- plugin 下的 configuration  对插的配置    如果在execution标签中  测试对插件中的某一个小功能的配置-->
                <configuration>
                    <source>${java_source_version}</source>
                    <target>${java_target_version}</target>
                    <encoding>${file_encoding}</encoding>
                </configuration>
            </plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4.3</version>
				<!-- MAVEN的maven-surefire-plugin在新建JVM进程后,由于没有指定encoding,
					采用了OS的默认编码,导致读取UTF-8文件(测试类的sql脚本文件)时出现乱码,最终影响了TestNG的正确执行 -->
				<configuration>
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>

			<plugin>
				<!-- 用来处理资源文件 -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<delimiters>
						<delimiter>${*}</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>

		</plugins>
    </build>
    
    <distributionManagement>
    	<!-- 给出Maven部署当前项目的构件到远程库时 -->
        <repository>
            <id>releases</id>
            <name>Internal releases</name>
            <url>http://123.206.174.58:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshot</id>
            <name>Internal snapshot</name>
            <url>http://123.206.174.58:8081/nexus/content/repositories/snapshots/</url>
            <uniqueVersion>true</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>
</project>